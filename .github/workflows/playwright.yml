name: Playwright Tests
on:
  workflow_dispatch:

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        id: install-dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        id: install-playwright-browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

  test:
    name: Tests - ${{ matrix.project }} - Shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }}
    runs-on: ubuntu-latest
    needs: [install]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        shardIndex: [1, 2]
        shardTotal: [2]
    services:
      rbp-booking:
        image: mwinteringham/restfulbookerplatform_booking:1.6.24c7b22
        ports:
          - 3000:3000
      rbp-room:
        image: mwinteringham/restfulbookerplatform_room:1.6.24c7b22
        ports:
          - 3001:3001
      rbp-branding:
        image: mwinteringham/restfulbookerplatform_branding:1.6.24c7b22
        ports:
          - 3002:3002
      rbp-assets:
        image: mwinteringham/restfulbookerplatform_assets:1.6.24c7b22
        ports:
          - 3003:3003
      rbp-auth:
        image: mwinteringham/restfulbookerplatform_auth:1.6.24c7b22
        ports:
          - 3004:3004
      rbp-report:
        image: mwinteringham/restfulbookerplatform_report:1.6.24c7b22
        ports:
          - 3005:3005
      rbp-message:
        image: mwinteringham/restfulbookerplatform_message:1.6.24c7b22
        ports:
          - 3006:3006
      rbp-proxy:
        image: mwinteringham/restfulbookerplatform_proxy:latest
        ports:
          - 80:80
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      # Playwright caches the browser binaries, but not their dependencies.
      # Those extra browser dependencies must be installed separately when the cached browsers are restored.
      - name: Install Playwright System Dependencies
        id: install-playwright-system-dependencies
        run: npx playwright install-deps ${{ matrix.project }}
      - name: Run Playwright Tests
        id: run-playwright-tests
        run: npx playwright test --project=${{ matrix.project }} --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          ENV: local 
      - name: Upload Playwright HTML Report
        id: upload-playwright-html-report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 1
      - name: Upload Playwright Test Results
        id: upload-playwright-test-results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: test-results/
          if-no-files-found: ignore
          retention-days: 1
      - name: Upload Playwright Monocart Report
        id: upload-playwright-monocart-report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: monocart-report-${{ matrix.project }}-${{ matrix.shardIndex }}_${{ matrix.shardTotal }}
          path: playwright-monocart-report/
          if-no-files-found: ignore
          retention-days: 1

  report:
    name: Merge and Publish Reports
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 30
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: 'pages'
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout Repository
        id: checkout-repository
        uses: actions/checkout@v3
      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Download Artifacts
        id: download-artifacts
        uses: actions/download-artifact@v3
      - name: Merge Playwright HTML Reports
        id: merge-playwright-html-reports
        run: npm run merge:report:playwright
      - name: Merge Playwright Monocart Reports
        id: merge-playwright-monocart-reports
        run: |
          curl -o previous-trend.json https://milos-pujic.github.io/playwright-e2e-tests/monocart/index.json
          npm run merge:report:monocart
          chmod +x ./merge-test-results.sh
          ./merge-test-results.sh
      - name: Move to Reports folder
        id: move-to-reports-folder
        run: |
          mv merged-html-report reports/playwright
          mv merged-monocart-report reports/monocart
        shell: bash
      - name: Setup Pages
        id: setup-pages
        uses: actions/configure-pages@v3
      - name: Upload Pages Artifact
        id: upload-pages-artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: reports/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Delete Unnecessary Artifacts
        id: delete-unnecessary-artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            playwright-report-*
            test-results-*
            monocart-report-*
          failOnError: false
